variables:
  dockerRegistryServiceConnection: 'docker-hub-connection'  # Azure DevOps me Docker Hub service connection ka naam
  imageRepository: 'your-dockerhub-username/your-image-name'
  dockerfilePath: 'Dockerfile'
  tag: '$(Build.BuildId)'   # unique build tag
  k8sNamespace: 'my-namespace'
  k8sManifestFolder: 'manifests'  # yahi folder me tumhare YAML files hongi
  nodeVersion: '18.x'


trigger:
 branches:
   include:
     - main

pool: 
  name: "Infra-Runners-pool"
  demands:
    - agent.name -equals office
     
# stage one 
stages:
  - stage: "nodejsInstall"
    displayName: "NodeJs Tool Installation Stage"
    jobs:
      - job: "nodejsInstallJob"
        displayName: "NPM Toll Installand build"


    
        steps:
        - task: NodeTool@0
          inputs:
            versionSource: 'spec'
            versionSpec: '18'
            checkLatest: true
        - script:
            npm install
            npm run build
          displayName: 'Install dependencies and build app'
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'drop'
            publishLocation: 'Container'
        
# ------------------------
# # Stage 2: Docker Build & Push

  - stage: DockerImage
    displayName: "Build and Push Docker Image"
    dependsOn: nodejsInstall
    jobs:
      - job: containerization
        displayName: "containerization"
        steps:
        - task: Docker@2
          inputs:
            containerRegistry: 'DockerHubConnection'
            repository: 'prmd77/cloudsurgeimag'
            command: 'buildAndPush'
            Dockerfile: '**/Dockerfile'
         
        
# ------------------------
# Stage 3: Deploy to Kubernetes

  - stage: "DeployToAKS"
    displayName: "Deploy To Kebenetes"
    jobs:
      - job: "DeplpytoAKS"
        displayName: "DeployToKubernetes"
        steps:
        - task: KubernetesManifest@1
          inputs:
            action: 'deploy'
            connectionType: 'kubernetesServiceConnection'
            kubernetesServiceConnection: 'aks-service-connection'
            namespace: 'prod'
            manifests: 'manifests/*.yaml'
        




